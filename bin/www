!#/usr/bin/env coffee
app = require "../app"
debug = require('debug') 'backend:server'
http = require 'http'
os = require 'os'
process.env.TZ = 'utc'

normalizePort = (val)->
	port = parseInt val, 10

	if isNaN port
		val
	else if port >= 0 
		port
	false

onError = (error)->
	if error.syscall isnt 'listen'
		throw error
	bind = if typeof port is 'string' then "Pipe #{port}"

	switch error.code
		when 'EACCES'
			console.error "#{bind} requires elevated privileges"
			process.exit 1
		when 'EADDRINUSE'
			console.error "#{bind} already in use"
			process.exit 1
		else
			throw error

onListening = ->
	addr = server.address()
	bind = if typeof addr is 'string' then "pipe #{addr}" else "port #{addr.port}"
	debug "listen on #{bind}"

#set node env variable
process.env.NODE_ENV = os.hostname()

port = process.env.PORT || 3000
app.set 'port', port

server = http.createServer app 

server.listen port
server.on 'error', onError
server.on 'listening', onListening


